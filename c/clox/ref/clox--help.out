-- gc begin
-- gc end: collected 0 bytes (from 6 to 6), next at 12
-- gc begin
-- gc end: collected 0 bytes (from 46 to 46), next at 92
heap_002 allocate 40 for 3
-- gc begin
-- gc end: collected 0 bytes (from 238 to 238), next at 476
-- gc begin
heap_002 mark clock
heap_002 blacken clock
-- gc end: collected 0 bytes (from 262 to 262), next at 524
heap_004 allocate 24 for 2
-- gc begin
heap_004 mark <native fn>
heap_004 blacken <native fn>
-- gc end: collected 0 bytes (from 454 to 454), next at 908
-- gc begin
heap_004 mark <native fn>
heap_004 blacken <native fn>
-- gc end: collected 0 bytes (from 457 to 457), next at 914
-- gc begin
heap_004 mark <native fn>
heap_004 blacken <native fn>
-- gc end: collected 0 bytes (from 497 to 497), next at 994
heap_007 allocate 40 for 3
-- gc begin
heap_007 mark gc
heap_004 mark <native fn>
heap_004 blacken <native fn>
heap_007 blacken gc
-- gc end: collected 0 bytes (from 521 to 521), next at 1042
heap_008 allocate 24 for 2

Usage:
    clox [options]

Options:
    Options are scanned strictly left to right, changing flags
    or exercising bits of cLox. If no file names are specified
    and the REPL was not explicitly run, it will be automatically
    run after parsing is complete.

Special Options:
    -                   (with no short flags) run the REPL.
    --                  The rest of the arguments are all filenames.

Flags:
    -?, -h, --help      produce this help message
    -v, --verbose       turn up verbose operation flag
    -n, --dryrun        turn up dryrun flag
    -d, --debug         turn up debug level
    -V, --no-verbose    turn down verbose operation flag
    -N, --no-dryrun     turn down dryrun flag
    -D, --no-debug      turn down debug level
        --bist          run the built-in self test
        --demo          run the quick demo code

    Multiple short flags can be combined (so -dv will turn up both the
    debug and verbose levels).

