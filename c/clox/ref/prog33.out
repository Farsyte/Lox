-- gc begin
-- gc end: collected 0 bytes (from 6 to 6), next at 12
-- gc begin
-- gc end: collected 0 bytes (from 46 to 46), next at 92
heap_002 allocate 40 for 3
-- gc begin
heap_002 mark clock
heap_002 blacken clock
-- gc end: collected 0 bytes (from 238 to 238), next at 476
-- gc begin
heap_002 mark clock
heap_002 blacken clock
-- gc end: collected 0 bytes (from 262 to 262), next at 524
heap_004 allocate 24 for 2
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 454 to 454), next at 908
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 457 to 457), next at 914
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 497 to 497), next at 994
heap_007 allocate 40 for 3
-- gc begin
heap_007 mark gc
heap_002 mark clock
heap_004 mark <native fn>
heap_004 blacken <native fn>
heap_002 blacken clock
heap_007 blacken gc
-- gc end: collected 0 bytes (from 521 to 521), next at 1042
heap_008 allocate 24 for 2
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 662 to 662), next at 1324
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 734 to 734), next at 1468
heap_010 allocate 72 for 1
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 736 to 736), next at 1472
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_010 blacken <script>
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 776 to 776), next at 1552
heap_012 allocate 40 for 3
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_010 blacken <script>
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 904 to 904), next at 1808
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_010 blacken <script>
heap_012 mark i
heap_012 blacken i
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 912 to 912), next at 1824
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_010 blacken <script>
heap_012 mark i
heap_012 blacken i
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 944 to 944), next at 1888
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_010 blacken <script>
heap_012 mark i
heap_012 blacken i
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 952 to 952), next at 1904
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_010 blacken <script>
heap_012 mark i
heap_012 blacken i
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 984 to 984), next at 1968
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_010 blacken <script>
heap_012 mark i
heap_012 blacken i
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 1000 to 1000), next at 2000
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_010 blacken <script>
heap_012 mark i
heap_012 blacken i
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 1064 to 1064), next at 2128
-- gc begin
heap_012 mark i
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_010 blacken <script>
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
heap_012 blacken i
-- gc end: collected 0 bytes (from 1192 to 1192), next at 2384
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_010 blacken <script>
heap_012 mark i
heap_012 blacken i
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 1224 to 1224), next at 2448
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_010 blacken <script>
heap_012 mark i
heap_012 blacken i
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 1352 to 1352), next at 2704
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_010 blacken <script>
heap_012 mark i
heap_012 blacken i
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 1363 to 1363), next at 2726
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_010 blacken <script>
heap_012 mark i
heap_012 blacken i
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 1403 to 1403), next at 2806
heap_022 allocate 40 for 3
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_010 blacken <script>
heap_012 mark i
heap_012 blacken i
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 1414 to 1414), next at 2828
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_010 blacken <script>
heap_012 mark i
heap_022 mark PASS: i = 
heap_022 blacken PASS: i = 
heap_012 blacken i
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
-- gc end: collected 0 bytes (from 1454 to 1454), next at 2908
heap_024 allocate 40 for 3

Disassembling <script> ...
0000    1 OP_CONSTANT         1 '10'
0002    | OP_DEFINE_GLOBAL    0 'i'
0004    2 OP_GET_GLOBAL       2 'i'
0006    | OP_CONSTANT         3 '0'
0008    | OP_GREATER
0009    | OP_JUMP_IF_FALSE    9 -> 27
0012    | OP_POP
0013    3 OP_GET_GLOBAL       4 'i'
0015    | OP_PRINT
0016    4 OP_GET_GLOBAL       6 'i'
0018    | OP_CONSTANT         7 '1'
0020    | OP_SUBTRACT
0021    | OP_SET_GLOBAL       5 'i'
0023    | OP_POP
0024    5 OP_LOOP            24 -> 4
0027    | OP_POP
0028    7 OP_GET_GLOBAL       8 'i'
0030    | OP_CONSTANT         9 '0'
0032    | OP_EQUAL
0033    | OP_JUMP_IF_FALSE   33 -> 46
0036    | OP_POP
0037    8 OP_CONSTANT        10 'PASS: i = '
0039    | OP_GET_GLOBAL      11 'i'
0041    | OP_ADD
0042    | OP_PRINT
0043    9 OP_JUMP            43 -> 53
0046    | OP_POP
0047   10 OP_CONSTANT        12 'FAIL: i = '
0049    | OP_GET_GLOBAL      13 'i'
0051    | OP_ADD
0052    | OP_PRINT
0053   12 OP_NIL
0054    | OP_RETURN
Disassembling <script> ... done.

-- gc begin
heap_010 mark <script>
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_008 blacken <native fn>
heap_007 blacken gc
heap_004 blacken <native fn>
heap_002 blacken clock
heap_010 blacken <script>
heap_012 mark i
heap_022 mark PASS: i = 
heap_022 blacken PASS: i = 
heap_012 blacken i
-- gc end: collected 0 bytes (from 1494 to 1494), next at 2988
heap_025 allocate 40 for 0

Executing ...
stack: <script>
0000    1 OP_CONSTANT         1 '10'
stack: <script> 10
0002    | OP_DEFINE_GLOBAL    0 'i'
stack: <script>
0004    2 OP_GET_GLOBAL       2 'i'
stack: <script> 10
0006    | OP_CONSTANT         3 '0'
stack: <script> 10 0
0008    | OP_GREATER
stack: <script> true
0009    | OP_JUMP_IF_FALSE    9 -> 27
stack: <script> true
0012    | OP_POP
stack: <script>
0013    3 OP_GET_GLOBAL       4 'i'
stack: <script> 10
0015    | OP_PRINT
10
stack: <script>
0016    4 OP_GET_GLOBAL       6 'i'
stack: <script> 10
0018    | OP_CONSTANT         7 '1'
stack: <script> 10 1
0020    | OP_SUBTRACT
stack: <script> 9
0021    | OP_SET_GLOBAL       5 'i'
stack: <script> 9
0023    | OP_POP
stack: <script>
0024    5 OP_LOOP            24 -> 4
stack: <script>
0004    2 OP_GET_GLOBAL       2 'i'
stack: <script> 9
0006    | OP_CONSTANT         3 '0'
stack: <script> 9 0
0008    | OP_GREATER
stack: <script> true
0009    | OP_JUMP_IF_FALSE    9 -> 27
stack: <script> true
0012    | OP_POP
stack: <script>
0013    3 OP_GET_GLOBAL       4 'i'
stack: <script> 9
0015    | OP_PRINT
9
stack: <script>
0016    4 OP_GET_GLOBAL       6 'i'
stack: <script> 9
0018    | OP_CONSTANT         7 '1'
stack: <script> 9 1
0020    | OP_SUBTRACT
stack: <script> 8
0021    | OP_SET_GLOBAL       5 'i'
stack: <script> 8
0023    | OP_POP
stack: <script>
0024    5 OP_LOOP            24 -> 4
stack: <script>
0004    2 OP_GET_GLOBAL       2 'i'
stack: <script> 8
0006    | OP_CONSTANT         3 '0'
stack: <script> 8 0
0008    | OP_GREATER
stack: <script> true
0009    | OP_JUMP_IF_FALSE    9 -> 27
stack: <script> true
0012    | OP_POP
stack: <script>
0013    3 OP_GET_GLOBAL       4 'i'
stack: <script> 8
0015    | OP_PRINT
8
stack: <script>
0016    4 OP_GET_GLOBAL       6 'i'
stack: <script> 8
0018    | OP_CONSTANT         7 '1'
stack: <script> 8 1
0020    | OP_SUBTRACT
stack: <script> 7
0021    | OP_SET_GLOBAL       5 'i'
stack: <script> 7
0023    | OP_POP
stack: <script>
0024    5 OP_LOOP            24 -> 4
stack: <script>
0004    2 OP_GET_GLOBAL       2 'i'
stack: <script> 7
0006    | OP_CONSTANT         3 '0'
stack: <script> 7 0
0008    | OP_GREATER
stack: <script> true
0009    | OP_JUMP_IF_FALSE    9 -> 27
stack: <script> true
0012    | OP_POP
stack: <script>
0013    3 OP_GET_GLOBAL       4 'i'
stack: <script> 7
0015    | OP_PRINT
7
stack: <script>
0016    4 OP_GET_GLOBAL       6 'i'
stack: <script> 7
0018    | OP_CONSTANT         7 '1'
stack: <script> 7 1
0020    | OP_SUBTRACT
stack: <script> 6
0021    | OP_SET_GLOBAL       5 'i'
stack: <script> 6
0023    | OP_POP
stack: <script>
0024    5 OP_LOOP            24 -> 4
stack: <script>
0004    2 OP_GET_GLOBAL       2 'i'
stack: <script> 6
0006    | OP_CONSTANT         3 '0'
stack: <script> 6 0
0008    | OP_GREATER
stack: <script> true
0009    | OP_JUMP_IF_FALSE    9 -> 27
stack: <script> true
0012    | OP_POP
stack: <script>
0013    3 OP_GET_GLOBAL       4 'i'
stack: <script> 6
0015    | OP_PRINT
6
stack: <script>
0016    4 OP_GET_GLOBAL       6 'i'
stack: <script> 6
0018    | OP_CONSTANT         7 '1'
stack: <script> 6 1
0020    | OP_SUBTRACT
stack: <script> 5
0021    | OP_SET_GLOBAL       5 'i'
stack: <script> 5
0023    | OP_POP
stack: <script>
0024    5 OP_LOOP            24 -> 4
stack: <script>
0004    2 OP_GET_GLOBAL       2 'i'
stack: <script> 5
0006    | OP_CONSTANT         3 '0'
stack: <script> 5 0
0008    | OP_GREATER
stack: <script> true
0009    | OP_JUMP_IF_FALSE    9 -> 27
stack: <script> true
0012    | OP_POP
stack: <script>
0013    3 OP_GET_GLOBAL       4 'i'
stack: <script> 5
0015    | OP_PRINT
5
stack: <script>
0016    4 OP_GET_GLOBAL       6 'i'
stack: <script> 5
0018    | OP_CONSTANT         7 '1'
stack: <script> 5 1
0020    | OP_SUBTRACT
stack: <script> 4
0021    | OP_SET_GLOBAL       5 'i'
stack: <script> 4
0023    | OP_POP
stack: <script>
0024    5 OP_LOOP            24 -> 4
stack: <script>
0004    2 OP_GET_GLOBAL       2 'i'
stack: <script> 4
0006    | OP_CONSTANT         3 '0'
stack: <script> 4 0
0008    | OP_GREATER
stack: <script> true
0009    | OP_JUMP_IF_FALSE    9 -> 27
stack: <script> true
0012    | OP_POP
stack: <script>
0013    3 OP_GET_GLOBAL       4 'i'
stack: <script> 4
0015    | OP_PRINT
4
stack: <script>
0016    4 OP_GET_GLOBAL       6 'i'
stack: <script> 4
0018    | OP_CONSTANT         7 '1'
stack: <script> 4 1
0020    | OP_SUBTRACT
stack: <script> 3
0021    | OP_SET_GLOBAL       5 'i'
stack: <script> 3
0023    | OP_POP
stack: <script>
0024    5 OP_LOOP            24 -> 4
stack: <script>
0004    2 OP_GET_GLOBAL       2 'i'
stack: <script> 3
0006    | OP_CONSTANT         3 '0'
stack: <script> 3 0
0008    | OP_GREATER
stack: <script> true
0009    | OP_JUMP_IF_FALSE    9 -> 27
stack: <script> true
0012    | OP_POP
stack: <script>
0013    3 OP_GET_GLOBAL       4 'i'
stack: <script> 3
0015    | OP_PRINT
3
stack: <script>
0016    4 OP_GET_GLOBAL       6 'i'
stack: <script> 3
0018    | OP_CONSTANT         7 '1'
stack: <script> 3 1
0020    | OP_SUBTRACT
stack: <script> 2
0021    | OP_SET_GLOBAL       5 'i'
stack: <script> 2
0023    | OP_POP
stack: <script>
0024    5 OP_LOOP            24 -> 4
stack: <script>
0004    2 OP_GET_GLOBAL       2 'i'
stack: <script> 2
0006    | OP_CONSTANT         3 '0'
stack: <script> 2 0
0008    | OP_GREATER
stack: <script> true
0009    | OP_JUMP_IF_FALSE    9 -> 27
stack: <script> true
0012    | OP_POP
stack: <script>
0013    3 OP_GET_GLOBAL       4 'i'
stack: <script> 2
0015    | OP_PRINT
2
stack: <script>
0016    4 OP_GET_GLOBAL       6 'i'
stack: <script> 2
0018    | OP_CONSTANT         7 '1'
stack: <script> 2 1
0020    | OP_SUBTRACT
stack: <script> 1
0021    | OP_SET_GLOBAL       5 'i'
stack: <script> 1
0023    | OP_POP
stack: <script>
0024    5 OP_LOOP            24 -> 4
stack: <script>
0004    2 OP_GET_GLOBAL       2 'i'
stack: <script> 1
0006    | OP_CONSTANT         3 '0'
stack: <script> 1 0
0008    | OP_GREATER
stack: <script> true
0009    | OP_JUMP_IF_FALSE    9 -> 27
stack: <script> true
0012    | OP_POP
stack: <script>
0013    3 OP_GET_GLOBAL       4 'i'
stack: <script> 1
0015    | OP_PRINT
1
stack: <script>
0016    4 OP_GET_GLOBAL       6 'i'
stack: <script> 1
0018    | OP_CONSTANT         7 '1'
stack: <script> 1 1
0020    | OP_SUBTRACT
stack: <script> 0
0021    | OP_SET_GLOBAL       5 'i'
stack: <script> 0
0023    | OP_POP
stack: <script>
0024    5 OP_LOOP            24 -> 4
stack: <script>
0004    2 OP_GET_GLOBAL       2 'i'
stack: <script> 0
0006    | OP_CONSTANT         3 '0'
stack: <script> 0 0
0008    | OP_GREATER
stack: <script> false
0009    | OP_JUMP_IF_FALSE    9 -> 27
stack: <script> false
0027    | OP_POP
stack: <script>
0028    7 OP_GET_GLOBAL       8 'i'
stack: <script> 0
0030    | OP_CONSTANT         9 '0'
stack: <script> 0 0
0032    | OP_EQUAL
stack: <script> true
0033    | OP_JUMP_IF_FALSE   33 -> 46
stack: <script> true
0036    | OP_POP
stack: <script>
0037    8 OP_CONSTANT        10 'PASS: i = '
stack: <script> PASS: i = 
0039    | OP_GET_GLOBAL      11 'i'
stack: <script> PASS: i =  0
0041    | OP_ADD
stack: empty.
0042    | OP_PRINT

