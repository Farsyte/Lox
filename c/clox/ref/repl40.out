-- gc begin
-- gc end
-- gc begin
-- gc end
heap_002 allocate 40 for 3
-- gc begin
-- gc end
-- gc begin
-- gc end
heap_004 allocate 24 for 2
-- gc begin
-- gc end
-- gc begin
-- gc end
-- gc begin
-- gc end
heap_007 allocate 40 for 3
-- gc begin
-- gc end
heap_008 allocate 24 for 2
-- gc begin
-- gc end
-- gc begin
-- gc end
heap_010 allocate 72 for 1
-- gc begin
-- gc end
-- gc begin
-- gc end
heap_012 allocate 40 for 3
-- gc begin
-- gc end
-- gc begin
-- gc end
heap_014 allocate 72 for 1
-- gc begin
-- gc end
-- gc begin
-- gc end
heap_016 allocate 40 for 3
-- gc begin
-- gc end
-- gc begin
-- gc end
-- gc begin
-- gc end
-- gc begin
-- gc end
-- gc begin
-- gc end
heap_021 allocate 40 for 3
-- gc begin
-- gc end
-- gc begin
-- gc end
-- gc begin
-- gc end
-- gc begin
-- gc end
heap_024 allocate 40 for 3
-- gc begin
-- gc end
-- gc begin
-- gc end

Disassembling sayHi ...
0000    1 OP_CONSTANT         0 'Hi, '
0002    | OP_GET_LOCAL        1
0004    | OP_ADD
0005    | OP_CONSTANT         1 ' '
0007    | OP_ADD
0008    | OP_GET_LOCAL        2
0010    | OP_ADD
0011    | OP_CONSTANT         2 '!'
0013    | OP_ADD
0014    | OP_PRINT
0015    | OP_NIL
0016    | OP_RETURN
Disassembling sayHi ... done.

-- gc begin
-- gc end
-- gc begin
-- gc end
-- gc begin
-- gc end
-- gc begin
-- gc end
heap_030 allocate 40 for 3
-- gc begin
-- gc end
-- gc begin
-- gc end
-- gc begin
-- gc end
heap_033 allocate 40 for 3
-- gc begin
-- gc end
-- gc begin
-- gc end

Disassembling <script> ...
0000    1 OP_CLOSURE          1 <fn sayHi>
0002    | OP_DEFINE_GLOBAL    0 'sayHi'
0004    2 OP_GET_GLOBAL       2 'sayHi'
0006    | OP_CONSTANT         3 'Dear'
0008    | OP_CONSTANT         4 'Reader'
0010    | OP_CALL             2
0012    | OP_POP
0013    3 OP_NIL
0014    | OP_RETURN
Disassembling <script> ... done.

-- gc begin
-- gc end
heap_035 allocate 40 for 0

Executing ...
stack: <script>
0000    1 OP_CLOSURE          1 <fn sayHi>
-- gc begin
-- gc end
heap_036 allocate 40 for 0
stack: <script> <fn sayHi>
0002    | OP_DEFINE_GLOBAL    0 'sayHi'
stack: <script>
0004    2 OP_GET_GLOBAL       2 'sayHi'
stack: <script> <fn sayHi>
0006    | OP_CONSTANT         3 'Dear'
stack: <script> <fn sayHi> Dear
0008    | OP_CONSTANT         4 'Reader'
stack: <script> <fn sayHi> Dear Reader
0010    | OP_CALL             2
stack: <script> <fn sayHi> Dear Reader
0000    1 OP_CONSTANT         0 'Hi, '
stack: <script> <fn sayHi> Dear Reader Hi, 
0002    | OP_GET_LOCAL        1
stack: <script> <fn sayHi> Dear Reader Hi,  Dear
0004    | OP_ADD
-- gc begin
-- gc end
-- gc begin
-- gc end
heap_038 allocate 40 for 3
stack: <script> <fn sayHi> Dear Reader Hi, Dear
0005    | OP_CONSTANT         1 ' '
stack: <script> <fn sayHi> Dear Reader Hi, Dear  
0007    | OP_ADD
-- gc begin
-- gc end
-- gc begin
-- gc end
heap_040 allocate 40 for 3
stack: <script> <fn sayHi> Dear Reader Hi, Dear 
0008    | OP_GET_LOCAL        2
stack: <script> <fn sayHi> Dear Reader Hi, Dear  Reader
0010    | OP_ADD
-- gc begin
-- gc end
-- gc begin
-- gc end
heap_042 allocate 40 for 3
stack: <script> <fn sayHi> Dear Reader Hi, Dear Reader
0011    | OP_CONSTANT         2 '!'
stack: <script> <fn sayHi> Dear Reader Hi, Dear Reader !
0013    | OP_ADD
-- gc begin
-- gc end
-- gc begin
-- gc end
heap_044 allocate 40 for 3
stack: <script> <fn sayHi> Dear Reader Hi, Dear Reader!
0014    | OP_PRINT
Hi, Dear Reader!
stack: <script> <fn sayHi> Dear Reader
0015    | OP_NIL
stack: <script> <fn sayHi> Dear Reader nil
0016    | OP_RETURN
stack: <script> nil
0012    | OP_POP
stack: <script>
0013    3 OP_NIL
stack: <script> nil
0014    | OP_RETURN
Executing ... done.

