-- gc begin
-- gc end
-- gc begin
-- gc end
heap_002 allocate 40 for 3
-- gc begin
-- gc end
-- gc begin
heap_002 mark clock
-- gc end
heap_004 allocate 24 for 2
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
-- gc end
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
-- gc end
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
-- gc end
heap_007 allocate 40 for 3
-- gc begin
heap_007 mark gc
heap_002 mark clock
heap_004 mark <native fn>
-- gc end
heap_008 allocate 24 for 2
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
-- gc end
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
-- gc end
heap_010 allocate 72 for 1
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
-- gc end
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
-- gc end
heap_012 allocate 40 for 3
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
-- gc end
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_012 mark one
-- gc end
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_012 mark one
-- gc end
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_012 mark one
-- gc end
-- gc begin
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_010 mark <script>
heap_012 mark one
-- gc end

Disassembling <script> ...
0000    1 OP_CONSTANT         0 'one'
0002    | OP_PRINT
0003    2 OP_TRUE
0004    | OP_PRINT
0005    3 OP_CONSTANT         1 '2'
0007    | OP_CONSTANT         2 '1'
0009    | OP_ADD
0010    | OP_PRINT
0011    4 OP_NIL
0012    | OP_RETURN
Disassembling <script> ... done.

-- gc begin
heap_010 mark <script>
heap_002 mark clock
heap_004 mark <native fn>
heap_007 mark gc
heap_008 mark <native fn>
heap_012 mark one
-- gc end
heap_016 allocate 40 for 0

Executing ...
stack: <script>
0000    1 OP_CONSTANT         0 'one'
stack: <script> one
0002    | OP_PRINT
one
stack: <script>
0003    2 OP_TRUE
stack: <script> true
0004    | OP_PRINT
true
stack: <script>
0005    3 OP_CONSTANT         1 '2'
stack: <script> 2
0007    | OP_CONSTANT         2 '1'
stack: <script> 2 1
0009    | OP_ADD
stack: <script> 3
0010    | OP_PRINT
3
stack: <script>
0011    4 OP_NIL
stack: <script> nil
0012    | OP_RETURN
Executing ... done.

heap_016 free type 0
heap_012 free type 3
heap_010 free type 1
heap_008 free type 2
heap_007 free type 3
heap_004 free type 2
heap_002 free type 3
