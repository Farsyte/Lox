* Cumulative Grammar Definitions

As of §9.3 "Logical Operators"
the current grammar definition is:

#+begin_src text
  program         → declaration* EOF ;

  declaration     → varDecl
                  | statement
                  ;

  statement       → exprStmt
                  | printStmt
                  | block
                  | ifStmt
                  ;

  ifStmt          → "if" "(" expression ")" statement
                  ( "else" statement )? ;

  block           → "{" declaration* "}" ;

  varDecl         → "var" IDENTIFIER ( "=" expression )? ";" ;
  exprStmt        → expression ";" ;
  printStmt       → "print" expression ";" ;

  expression      → assignment

  assignment      → IDENTIFIER = assignment
                  | logic_or
                  ;

  logic_or        → logic_and ( "or" logic_and )* ;
  logic_and       → equality ( "and" equality )* ;

  equality        → comparison ( ( "!=" | "==" ) comparison )* ;
  comparison      → term ( ( ">" | ">=" | "<" | "<=" ) term )* ;
  term            → factor ( ( "-" | "+" ) factor )* ;
  factor          → unary ( ( "/" | "*" ) unary )* ;

  unary           → ( "!" | "-" ) unary
                  | primary
                  ;

  primary         → "true" | "false" | "nil"
                  | "(" expression ")"
                  | STRING
                  | NUMBER
                  ;
#+end_src
